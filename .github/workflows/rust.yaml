name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test:
    runs-on: ubuntu-latest

    # This image already contains a pre-populated events db "arak" and empty "store"
    # It takes less than 30 seconds to load this service image
    # as opposed to wrapping docker-compose up and down around the cargo test
    # which takes about 1m30 seconds.
    services:
      postgres:
        image: bh2smith/test-events:latest
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Lint
        run: cargo fmt --check && cargo clippy --all-targets --verbose

      - name: Migration
        run: |
          cargo install --debug diesel_cli --no-default-features --features postgres
          DATABASE_URL=postgresql://postgres:postgres@localhost:5432/store diesel migration run

#      - name: Start Docker Compose
#        run: docker-compose up -d

      - name: Run Tests
        run: cargo test

#      - name: Stop Docker Compose
#        run: docker-compose down
